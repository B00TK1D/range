version: '3.8'

services:
  vpn:
    image: linuxserver/wireguard:latest
    hostname: vpn
    container_name: vpn
    environment:
    - PEERS=${PEERS}
    - ALLOWEDIPS=10.100.0.0/15
    - SERVERURL=${VPN_SERVER_URL}
    cap_add:
      - NET_ADMIN
    volumes:
      - ./.docker/vpn:/config
    ports:
      - "51820:51820/udp"
    networks:
      game:
        ipv4_address: 10.101.0.1

  api:
    build:
      context: ./.docker/api
      dockerfile: Dockerfile
    hostname: api
    container_name: api
    environment:
      - API_KEY=${API_KEY}
      - TEAM_COUNT=${TEAM_COUNT}
      - PEERS=${PEERS}
    volumes:
      - ./.docker/api:/code
      - ./.docker/vpn:/vpn
    ports:
      - "8000:80"
    networks:
      game:
        ipv4_address: 10.101.0.2

  registry:
    image: registry:latest
    hostname: registry
    container_name: registry
    volumes:
      - ./.docker/registry/cache:/cache
      - ./.docker/registry/config.yml:/etc/docker/registry/config.yml
    environment:
      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /cache
    networks:
      game:
        ipv4_address: 10.101.0.6

  rangemaster:
    build:
      context: ./.docker/user
      dockerfile: Dockerfile
    image: alpine:latest
    container_name: rangemaster
    hostname: rangemaster
    entrypoint: sleep infinity
    networks:
      game:
        ipv4_address: 10.101.0.7


networks:
  game:
    driver: bridge
    ipam:
      config:
        - subnet: 10.100.0.0/15